Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    dma.o(i.Configure_DMA_For_Playback) refers to dma.o(.data) for .data
    dma.o(i.DMA0_IRQHandler) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    dma.o(i.DMA0_IRQHandler) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    dma.o(i.DMA0_IRQHandler) refers to dma.o(i.Start_DMA_Playback) for Start_DMA_Playback
    dma.o(i.DMA0_IRQHandler) refers to dma.o(.data) for .data
    dma.o(i.DMA0_IRQHandler) refers to threads.o(.data) for t_Refill_Sound_Buffer
    dma.o(i.Start_DMA_Playback) refers to timers.o(i.TPM0_Start) for TPM0_Start
    dma.o(i.Start_DMA_Playback) refers to dma.o(.data) for .data
    i2c.o(i.i2c_busy) refers to i2c.o(.data) for .data
    i2c.o(i.i2c_read_byte) refers to i2c.o(i.i2c_wait) for i2c_wait
    i2c.o(i.i2c_read_setup) refers to i2c.o(i.i2c_wait) for i2c_wait
    i2c.o(i.i2c_repeated_read) refers to i2c.o(i.i2c_wait) for i2c_wait
    i2c.o(i.i2c_repeated_read) refers to i2c.o(.data) for .data
    i2c.o(i.i2c_wait) refers to i2c.o(i.i2c_busy) for i2c_busy
    i2c.o(i.i2c_wait) refers to i2c.o(.data) for .data
    i2c.o(i.i2c_write_byte) refers to i2c.o(i.i2c_wait) for i2c_wait
    main.o(i.main) refers to debug.o(i.Init_Debug_Signals) for Init_Debug_Signals
    main.o(i.main) refers to leds.o(i.Init_RGB_LEDs) for Init_RGB_LEDs
    main.o(i.main) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    main.o(i.main) refers to sound.o(i.Sound_Init) for Sound_Init
    main.o(i.main) refers to sound.o(i.Sound_Disable_Amp) for Sound_Disable_Amp
    main.o(i.main) refers to st7789.o(i.LCD_Init) for LCD_Init
    main.o(i.main) refers to lcd_text.o(i.LCD_Text_Init) for LCD_Text_Init
    main.o(i.main) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    main.o(i.main) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    main.o(i.main) refers to i2c.o(i.i2c_init) for i2c_init
    main.o(i.main) refers to mma8451.o(i.init_mma) for init_mma
    main.o(i.main) refers to delay.o(i.Delay) for Delay
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to threads.o(i.Create_OS_Objects) for Create_OS_Objects
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    mma8451.o(i.approx_atan2f) refers to fdiv.o(.text) for __aeabi_fdiv
    mma8451.o(i.approx_atan2f) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mma8451.o(i.approx_atan2f) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    mma8451.o(i.approx_atan2f) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    mma8451.o(i.convert_xyz_to_roll_pitch) refers to fflti.o(.text) for __aeabi_i2f
    mma8451.o(i.convert_xyz_to_roll_pitch) refers to mma8451.o(i.approx_atan2f) for approx_atan2f
    mma8451.o(i.convert_xyz_to_roll_pitch) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mma8451.o(i.convert_xyz_to_roll_pitch) refers to mma8451.o(i.approx_sqrtf) for approx_sqrtf
    mma8451.o(i.convert_xyz_to_roll_pitch) refers to mma8451.o(.data) for .data
    mma8451.o(i.init_mma) refers to i2c.o(i.i2c_read_byte) for i2c_read_byte
    mma8451.o(i.init_mma) refers to delay.o(i.Delay) for Delay
    mma8451.o(i.init_mma) refers to i2c.o(i.i2c_write_byte) for i2c_write_byte
    mma8451.o(i.read_full_xyz) refers to i2c.o(i.i2c_start) for i2c_start
    mma8451.o(i.read_full_xyz) refers to i2c.o(i.i2c_read_setup) for i2c_read_setup
    mma8451.o(i.read_full_xyz) refers to i2c.o(i.i2c_repeated_read) for i2c_repeated_read
    mma8451.o(i.read_full_xyz) refers to mma8451.o(.data) for .data
    mma8451.o(i.read_xyz) refers to i2c.o(i.i2c_read_byte) for i2c_read_byte
    mma8451.o(i.read_xyz) refers to delay.o(i.Delay) for Delay
    mma8451.o(i.read_xyz) refers to mma8451.o(.data) for .data
    sound.o(i.Init_Voices) refers to sound.o(.bss) for .bss
    sound.o(i.Init_Waveform) refers to sound.o(.bss) for .bss
    sound.o(i.Play_Tone) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    sound.o(i.Play_Tone) refers to sound.o(i.Play_Sound_Sample) for Play_Sound_Sample
    sound.o(i.Play_Tone) refers to delay.o(i.Delay) for Delay
    sound.o(i.Play_Waveform_with_DMA) refers to dma.o(i.Configure_DMA_For_Playback) for Configure_DMA_For_Playback
    sound.o(i.Play_Waveform_with_DMA) refers to dma.o(i.Start_DMA_Playback) for Start_DMA_Playback
    sound.o(i.Play_Waveform_with_DMA) refers to sound.o(.bss) for .bss
    sound.o(i.SineTable_Init) refers to fflti.o(.text) for __aeabi_ui2f
    sound.o(i.SineTable_Init) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sound.o(i.SineTable_Init) refers to sinf.o(i.sinf) for sinf
    sound.o(i.SineTable_Init) refers to ffixi.o(.text) for __aeabi_f2iz
    sound.o(i.SineTable_Init) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Generate_Next_Sample) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Init) refers to sound.o(i.SineTable_Init) for SineTable_Init
    sound.o(i.Sound_Init) refers to sound.o(i.Init_Waveform) for Init_Waveform
    sound.o(i.Sound_Init) refers to sound.o(i.Init_Voices) for Init_Voices
    sound.o(i.Sound_Init) refers to sound.o(i.DAC_Init) for DAC_Init
    sound.o(i.Sound_Init) refers to dma.o(i.DMA_Init) for DMA_Init
    sound.o(i.Sound_Init) refers to timers.o(i.TPM0_Init) for TPM0_Init
    sound.o(i.Sound_Init) refers to timers.o(i.Configure_TPM0_for_DMA) for Configure_TPM0_for_DMA
    sound.o(i.Sound_Init) refers to sound.o(.data) for .data
    sound.o(i.Thread_Refill_Sound_Buffer) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(i.Sound_Generate_Next_Sample) for Sound_Generate_Next_Sample
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(.bss) for .bss
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(.data) for .data
    sound.o(i.Thread_Sound_Manager) refers to rtx_delay.o(.text.osDelay) for osDelay
    sound.o(i.Thread_Sound_Manager) refers to fflti.o(.text) for __aeabi_ui2f
    sound.o(i.Thread_Sound_Manager) refers to fdiv.o(.text) for __aeabi_fdiv
    sound.o(i.Thread_Sound_Manager) refers to ffixui.o(.text) for __aeabi_f2uiz
    sound.o(i.Thread_Sound_Manager) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    sound.o(i.Thread_Sound_Manager) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    sound.o(i.Thread_Sound_Manager) refers to sound.o(i.Play_Waveform_with_DMA) for Play_Waveform_with_DMA
    sound.o(i.Thread_Sound_Manager) refers to sound.o(.bss) for .bss
    sound.o(i.Thread_Sound_Manager) refers to threads.o(.data) for t_Refill_Sound_Buffer
    threads.o(i.Create_OS_Objects) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    threads.o(i.Create_OS_Objects) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    threads.o(i.Create_OS_Objects) refers to threads.o(.constdata) for .constdata
    threads.o(i.Create_OS_Objects) refers to threads.o(.data) for .data
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Read_TS) for Thread_Read_TS
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Read_Accelerometer) for Thread_Read_Accelerometer
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Update_Screen) for Thread_Update_Screen
    threads.o(i.Create_OS_Objects) refers to sound.o(i.Thread_Sound_Manager) for Thread_Sound_Manager
    threads.o(i.Create_OS_Objects) refers to sound.o(i.Thread_Refill_Sound_Buffer) for Thread_Refill_Sound_Buffer
    threads.o(i.Thread_Read_Accelerometer) refers to _printf_pad.o(.text) for _printf_pre_padding
    threads.o(i.Thread_Read_Accelerometer) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    threads.o(i.Thread_Read_Accelerometer) refers to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    threads.o(i.Thread_Read_Accelerometer) refers to printf1.o(x$fpl$printf1) for _printf_fp_dec
    threads.o(i.Thread_Read_Accelerometer) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Read_Accelerometer) refers to mma8451.o(i.read_full_xyz) for read_full_xyz
    threads.o(i.Thread_Read_Accelerometer) refers to mma8451.o(i.convert_xyz_to_roll_pitch) for convert_xyz_to_roll_pitch
    threads.o(i.Thread_Read_Accelerometer) refers to f2d.o(.text) for __aeabi_f2d
    threads.o(i.Thread_Read_Accelerometer) refers to noretval__2sprintf.o(.text) for __2sprintf
    threads.o(i.Thread_Read_Accelerometer) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    threads.o(i.Thread_Read_Accelerometer) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    threads.o(i.Thread_Read_Accelerometer) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    threads.o(i.Thread_Read_Accelerometer) refers to threads.o(.data) for .data
    threads.o(i.Thread_Read_Accelerometer) refers to mma8451.o(.data) for roll
    threads.o(i.Thread_Read_TS) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    threads.o(i.Thread_Read_TS) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    threads.o(i.Thread_Read_TS) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Read_TS) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    threads.o(i.Thread_Read_TS) refers to sound.o(i.Sound_Disable_Amp) for Sound_Disable_Amp
    threads.o(i.Thread_Read_TS) refers to sound.o(i.Sound_Enable_Amp) for Sound_Enable_Amp
    threads.o(i.Thread_Read_TS) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    threads.o(i.Thread_Read_TS) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    threads.o(i.Thread_Read_TS) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    threads.o(i.Thread_Read_TS) refers to lcd_text.o(.data) for G_LCD_char_height
    threads.o(i.Thread_Read_TS) refers to threads.o(.data) for .data
    threads.o(i.Thread_Update_Screen) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Update_Screen) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    threads.o(i.Thread_Update_Screen) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    threads.o(i.Thread_Update_Screen) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    threads.o(i.Thread_Update_Screen) refers to fflti.o(.text) for __aeabi_i2f
    threads.o(i.Thread_Update_Screen) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    threads.o(i.Thread_Update_Screen) refers to ffixi.o(.text) for __aeabi_f2iz
    threads.o(i.Thread_Update_Screen) refers to ffixui.o(.text) for __aeabi_f2uiz
    threads.o(i.Thread_Update_Screen) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    threads.o(i.Thread_Update_Screen) refers to mma8451.o(.data) for roll
    threads.o(i.Thread_Update_Screen) refers to threads.o(.data) for .data
    threads.o(.constdata) refers to threads.o(.conststring) for .conststring
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for profiling_enabled
    timers.o(i.PIT_IRQHandler) refers to timers.o(.data) for .data
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for profile_samples
    timers.o(i.PIT_IRQHandler) refers to region.o(.constdata) for NumProfileRegions
    timers.o(i.PIT_IRQHandler) refers to region.o(.constdata) for RegionTable
    timers.o(i.PIT_IRQHandler) refers to region.o(.data) for RegionCount
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for adx_lost
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for num_lost
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Refresh) for LCD_Refresh
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.Graphics_Test) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    lcd_graphics.o(i.Graphics_Test) refers to lcd_graphics.o(i.LCD_Draw_Circle) for LCD_Draw_Circle
    lcd_graphics.o(i.Graphics_Test) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    lcd_graphics.o(i.LCD_Draw_Circle) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    lcd_graphics.o(i.LCD_Draw_Circle) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.LCD_Draw_Line) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.LCD_Draw_Line) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    lcd_text.o(i.LCD_Erase) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_text.o(i.LCD_Erase) refers to lcd_text.o(.data) for bg
    lcd_text.o(i.LCD_Text_GetGlyphWidth) refers to lcd_text.o(.data) for font_header
    lcd_text.o(i.LCD_Text_Init) refers to lucida_12x19.o(.constdata) for Lucida_Console12x19
    lcd_text.o(i.LCD_Text_Init) refers to lcd_text.o(.data) for font
    lcd_text.o(i.LCD_Text_PrintChar) refers to st7789.o(i.LCD_Start_Rectangle) for LCD_Start_Rectangle
    lcd_text.o(i.LCD_Text_PrintChar) refers to st7789.o(i.LCD_Write_Rectangle_Pixel) for LCD_Write_Rectangle_Pixel
    lcd_text.o(i.LCD_Text_PrintChar) refers to lcd_text.o(.data) for font_header
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(i.LCD_Text_GetGlyphWidth) for LCD_Text_GetGlyphWidth
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(.data) for G_LCD_char_width
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(i.LCD_Text_GetGlyphWidth) for LCD_Text_GetGlyphWidth
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(.data) for G_LCD_char_width
    lcd_text.o(i.LCD_Text_Set_Colors) refers to lcd_text.o(.data) for fg
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(i.LCD_Text_PrintStr) for LCD_Text_PrintStr
    lcd_text.o(i.LCD_Text_Test) refers to st7789.o(i.LCD_Refresh) for LCD_Refresh
    lcd_text.o(i.LCD_Text_Test) refers to delay.o(i.Delay) for Delay
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(.data) for G_LCD_char_width
    lcd_text.o(.data) refers to lucida_12x19.o(.constdata) for Lucida_Console12x19
    touchscreen.o(i.LCD_TS_Blocking_Read) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(i.LCD_Text_PrintStr) for LCD_Text_PrintStr
    touchscreen.o(i.LCD_TS_Calibrate) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    touchscreen.o(i.LCD_TS_Calibrate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(.data) for G_LCD_char_height
    touchscreen.o(i.LCD_TS_Calibrate) refers to touchscreen.o(.data) for .data
    touchscreen.o(i.LCD_TS_Init) refers to touchscreen.o(i.Init_ADC) for Init_ADC
    touchscreen.o(i.LCD_TS_Read) refers to rtx_delay.o(.text.osDelay) for osDelay
    touchscreen.o(i.LCD_TS_Read) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    touchscreen.o(i.LCD_TS_Read) refers to touchscreen.o(.data) for .data
    st7789.o(i.LCD_Controller_Init) refers to delay.o(i.Delay) for Delay
    st7789.o(i.LCD_Controller_Init) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Controller_Init) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Fill_Buffer) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Buffer) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Fill_Rectangle) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Rectangle) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Init) refers to st7789.o(i.LCD_GPIO_Init) for LCD_GPIO_Init
    st7789.o(i.LCD_Init) refers to touchscreen.o(i.LCD_TS_Init) for LCD_TS_Init
    st7789.o(i.LCD_Init) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    st7789.o(i.LCD_Init) refers to timers.o(i.PWM_Init) for PWM_Init
    st7789.o(i.LCD_Init) refers to st7789.o(i.LCD_Controller_Init) for LCD_Controller_Init
    st7789.o(i.LCD_Init) refers to system_mkl25z4.o(.data) for SystemCoreClock
    st7789.o(i.LCD_Init) refers to st7789.o(.constdata) for .constdata
    st7789.o(i.LCD_Plot_Pixel) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Plot_Pixel) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Set_BL) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Set_BL) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to system_mkl25z4.o(.data) for SystemCoreClock
    st7789.o(i.LCD_Set_Controller_Brightness) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Set_Controller_Brightness) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Start_Rectangle) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Start_Rectangle) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Write_Rectangle_Pixel) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    profile.o(i.Disable_Profiling) refers to profile.o(.data) for .data
    profile.o(i.Enable_Profiling) refers to profile.o(.data) for .data
    profile.o(i.Init_Profiling) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    profile.o(i.Init_Profiling) refers to timers.o(i.PIT_Init) for PIT_Init
    profile.o(i.Init_Profiling) refers to timers.o(i.PIT_Start) for PIT_Start
    profile.o(i.Init_Profiling) refers to region.o(.data) for RegionCount
    profile.o(i.Init_Profiling) refers to region.o(.constdata) for NumProfileRegions
    profile.o(i.Init_Profiling) refers to system_mkl25z4.o(.data) for SystemCoreClock
    profile.o(i.Sort_Profile_Regions) refers to region.o(.data) for SortedRegions
    profile.o(i.Sort_Profile_Regions) refers to region.o(.constdata) for NumProfileRegions
    profile.o(i.Sort_Profile_Regions) refers to region.o(.data) for RegionCount
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for .bss.os.libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_timer_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_mem
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_mq_attr
    startup_mkl25z4.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to dma.o(i.DMA0_IRQHandler) for DMA0_IRQHandler
    startup_mkl25z4.o(RESET) refers to timers.o(i.TPM0_IRQHandler) for TPM0_IRQHandler
    startup_mkl25z4.o(RESET) refers to timers.o(i.PIT_IRQHandler) for PIT_IRQHandler
    startup_mkl25z4.o(.ARM.__at_0x400) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(i.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to __main.o(!!!main) for __main
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(HEAP) for Heap_Mem
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(STACK) for Stack_Mem
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to system_mkl25z4.o(i.__ARM_common_switch8) for __ARM_common_switch8
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data) for .data
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm0.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdivfast.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    f2d.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixui.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    sinf.o(i.__softfp_sinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf.o(i.__softfp_sinf) refers to sinf.o(i.sinf) for sinf
    sinf.o(i.sinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf.o(i.sinf) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sinf.o(i.sinf) refers to frnd.o(.text) for _frnd
    sinf.o(i.sinf) refers to ffixi.o(.text) for __aeabi_f2iz
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    sinf.o(i.sinf) refers to rredf.o(i.__mathlib_rredf2) for __mathlib_rredf2
    sinf.o(i.sinf) refers to fpclassifyf.o(i.__ARM_fpclassifyf) for __ARM_fpclassifyf
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_underflow) for __mathlib_flt_underflow
    sinf.o(i.sinf) refers to _rserrno.o(.text) for __set_errno
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_invalid) for __mathlib_flt_invalid
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    sinf_x.o(i.____softfp_sinf$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf_x.o(i.____softfp_sinf$lsc) refers to sinf_x.o(i.__sinf$lsc) for __sinf$lsc
    sinf_x.o(i.__sinf$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf_x.o(i.__sinf$lsc) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sinf_x.o(i.__sinf$lsc) refers to frnd.o(.text) for _frnd
    sinf_x.o(i.__sinf$lsc) refers to ffixi.o(.text) for __aeabi_f2iz
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    sinf_x.o(i.__sinf$lsc) refers to rredf.o(i.__mathlib_rredf2) for __mathlib_rredf2
    sinf_x.o(i.__sinf$lsc) refers to _rserrno.o(.text) for __set_errno
    sinf_x.o(i.__sinf$lsc) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _rserrno.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(.text) for _btod_d2e
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_wp.o(.text) for __printf
    frnd.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassifyf.o(i.__ARM_fpclassifyf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    funder.o(i.__mathlib_flt_divzero) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_infnan) refers to fscalbn.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_infnan2) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    funder.o(i.__mathlib_flt_invalid) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_overflow) refers to fscalbn.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_posinfnan) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    funder.o(i.__mathlib_flt_underflow) refers to fscalbn.o(.text) for __ARM_scalbnf
    rredf.o(i.__mathlib_rredf2) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rredf.o(i.__mathlib_rredf2) refers to btod.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    rredf.o(i.__mathlib_rredf2) refers to fflti.o(.text) for __aeabi_i2f
    rredf.o(i.__mathlib_rredf2) refers to fscalbn.o(.text) for __ARM_scalbnf
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    rredf.o(i.__mathlib_rredf2) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    rredf.o(i.__mathlib_rredf2) refers to rredf.o(.constdata) for .constdata
    rredf.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(i.__user_perthread_libspace) for __user_perthread_libspace
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    bigflt0.o(.text) refers to btod.o(.text) for _btod_emul
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(.text) refers to btod.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv6m.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    fscalbn.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ieee_status.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mkl25z4.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing delay.o(.rev16_text), (4 bytes).
    Removing delay.o(.revsh_text), (4 bytes).
    Removing delay.o(i.ShortDelay), (14 bytes).
    Removing dma.o(.rev16_text), (4 bytes).
    Removing dma.o(.revsh_text), (4 bytes).
    Removing i2c.o(.rev16_text), (4 bytes).
    Removing i2c.o(.revsh_text), (4 bytes).
    Removing leds.o(.rev16_text), (4 bytes).
    Removing leds.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing mma8451.o(.rev16_text), (4 bytes).
    Removing mma8451.o(.revsh_text), (4 bytes).
    Removing mma8451.o(i.read_xyz), (60 bytes).
    Removing sound.o(.rev16_text), (4 bytes).
    Removing sound.o(.revsh_text), (4 bytes).
    Removing sound.o(i.Play_Sound_Sample), (16 bytes).
    Removing sound.o(i.Play_Tone), (68 bytes).
    Removing threads.o(.rev16_text), (4 bytes).
    Removing threads.o(.revsh_text), (4 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.PIT_Init), (100 bytes).
    Removing timers.o(i.PIT_Start), (16 bytes).
    Removing timers.o(i.PIT_Stop), (16 bytes).
    Removing timers.o(i.PWM_Set_Value), (8 bytes).
    Removing timers.o(.data), (4 bytes).
    Removing timers.o(.data), (4 bytes).
    Removing debug.o(.rev16_text), (4 bytes).
    Removing debug.o(.revsh_text), (4 bytes).
    Removing lucida_8x13.o(.constdata), (1640 bytes).
    Removing lucida_20x31.o(.constdata), (8762 bytes).
    Removing lcd_graphics.o(i.Graphics_Test), (384 bytes).
    Removing lcd_graphics.o(i.LCD_Draw_Circle), (230 bytes).
    Removing lcd_text.o(i.Bit_Reverse_Byte), (36 bytes).
    Removing lcd_text.o(i.LCD_Text_PrintStr), (64 bytes).
    Removing lcd_text.o(i.LCD_Text_Set_Colors), (40 bytes).
    Removing lcd_text.o(i.LCD_Text_Test), (176 bytes).
    Removing lcd_text.o(.constdata), (6 bytes).
    Removing t6963.o(.rev16_text), (4 bytes).
    Removing t6963.o(.revsh_text), (4 bytes).
    Removing touchscreen.o(.rev16_text), (4 bytes).
    Removing touchscreen.o(.revsh_text), (4 bytes).
    Removing touchscreen.o(i.LCD_TS_Blocking_Read), (36 bytes).
    Removing touchscreen.o(i.LCD_TS_Calibrate), (288 bytes).
    Removing st7789.o(.rev16_text), (4 bytes).
    Removing st7789.o(.revsh_text), (4 bytes).
    Removing st7789.o(i.LCD_Refresh), (2 bytes).
    Removing st7789.o(i.LCD_Set_BL), (28 bytes).
    Removing st7789.o(i.LCD_Set_Backlight_Brightness), (52 bytes).
    Removing st7789.o(i.LCD_Set_Controller_Brightness), (18 bytes).
    Removing st7789.o(.constdata), (126 bytes).
    Removing profile.o(.rev16_text), (4 bytes).
    Removing profile.o(.revsh_text), (4 bytes).
    Removing profile.o(i.Disable_Profiling), (12 bytes).
    Removing profile.o(i.Enable_Profiling), (12 bytes).
    Removing profile.o(i.Init_Profiling), (64 bytes).
    Removing profile.o(i.Print_Sorted_Profile), (2 bytes).
    Removing profile.o(i.Sort_Profile_Regions), (100 bytes).
    Removing region.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing system_mkl25z4.o(.rev16_text), (4 bytes).
    Removing system_mkl25z4.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(i.SystemCoreClockUpdate), (288 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (160 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (124 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (184 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (30 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_cm0.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (26 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (84 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (80 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (28 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (448 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (82 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (124 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (28 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (172 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (128 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing system_mkl25z4.o(i.__ARM_common_switch8), (26 bytes).

374 unused section(s) (total 19871 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.c                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv6m.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/f2d.c                    0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/frnd.c                   0x00000000   Number         0  frnd.o ABSOLUTE
    ../fplib/cfplib/ieee_status.c            0x00000000   Number         0  ieee_status.o ABSOLUTE
    ../fplib/cfplib/scalbn.c                 0x00000000   Number         0  fscalbn.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../mathlib/fpclassifyf.c                 0x00000000   Number         0  fpclassifyf.o ABSOLUTE
    ../mathlib/funder.c                      0x00000000   Number         0  funder.o ABSOLUTE
    ../mathlib/rredf.c                       0x00000000   Number         0  rredf.o ABSOLUTE
    ../mathlib/sinf.c                        0x00000000   Number         0  sinf.o ABSOLUTE
    ../mathlib/sinf.c                        0x00000000   Number         0  sinf_x.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\MKL25Z128xxx4\\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    Source\DMA.c                             0x00000000   Number         0  dma.o ABSOLUTE
    Source\I2C.c                             0x00000000   Number         0  i2c.o ABSOLUTE
    Source\LCD\LCD_graphics.c                0x00000000   Number         0  lcd_graphics.o ABSOLUTE
    Source\LCD\LCD_text.c                    0x00000000   Number         0  lcd_text.o ABSOLUTE
    Source\LCD\ST7789.c                      0x00000000   Number         0  st7789.o ABSOLUTE
    Source\LCD\T6963.c                       0x00000000   Number         0  t6963.o ABSOLUTE
    Source\LCD\lucida_12x19.c                0x00000000   Number         0  lucida_12x19.o ABSOLUTE
    Source\LCD\lucida_20x31.c                0x00000000   Number         0  lucida_20x31.o ABSOLUTE
    Source\LCD\lucida_8x13.c                 0x00000000   Number         0  lucida_8x13.o ABSOLUTE
    Source\LCD\touchscreen.c                 0x00000000   Number         0  touchscreen.o ABSOLUTE
    Source\LEDs.c                            0x00000000   Number         0  leds.o ABSOLUTE
    Source\MMA8451.c                         0x00000000   Number         0  mma8451.o ABSOLUTE
    Source\Profiler\profile.c                0x00000000   Number         0  profile.o ABSOLUTE
    Source\Profiler\region.c                 0x00000000   Number         0  region.o ABSOLUTE
    Source\\DMA.c                            0x00000000   Number         0  dma.o ABSOLUTE
    Source\\I2C.c                            0x00000000   Number         0  i2c.o ABSOLUTE
    Source\\LCD\\ST7789.c                    0x00000000   Number         0  st7789.o ABSOLUTE
    Source\\LCD\\T6963.c                     0x00000000   Number         0  t6963.o ABSOLUTE
    Source\\LCD\\touchscreen.c               0x00000000   Number         0  touchscreen.o ABSOLUTE
    Source\\LEDs.c                           0x00000000   Number         0  leds.o ABSOLUTE
    Source\\MMA8451.c                        0x00000000   Number         0  mma8451.o ABSOLUTE
    Source\\Profiler\\profile.c              0x00000000   Number         0  profile.o ABSOLUTE
    Source\\debug.c                          0x00000000   Number         0  debug.o ABSOLUTE
    Source\\delay.c                          0x00000000   Number         0  delay.o ABSOLUTE
    Source\\main.c                           0x00000000   Number         0  main.o ABSOLUTE
    Source\\sound.c                          0x00000000   Number         0  sound.o ABSOLUTE
    Source\\threads.c                        0x00000000   Number         0  threads.o ABSOLUTE
    Source\\timers.c                         0x00000000   Number         0  timers.o ABSOLUTE
    Source\debug.c                           0x00000000   Number         0  debug.o ABSOLUTE
    Source\delay.c                           0x00000000   Number         0  delay.o ABSOLUTE
    Source\main.c                            0x00000000   Number         0  main.o ABSOLUTE
    Source\sound.c                           0x00000000   Number         0  sound.o ABSOLUTE
    Source\threads.c                         0x00000000   Number         0  threads.o ABSOLUTE
    Source\timers.c                          0x00000000   Number         0  timers.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x00000120   Section        2  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000003  0x00000122   Section       10  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000017  0x0000012c   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x00000130   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x00000132   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x00000138   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000138   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000138   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000016          0x00000138   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000016)
    .ARM.Collect$$libinit$$00000017          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000142   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000142   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000144   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000146   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000146   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000146   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000146   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000146   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000146   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000146   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000148   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000148   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000148   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0000014e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000156   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000015a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000015a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000162   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000164   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000164   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000168   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000170   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x000001a8   Section       64  startup_mkl25z4.o(.text)
    .text                                    0x000001e8   Section      164  irq_cm0.o(.text)
    .text                                    0x0000028c   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x000002b4   Section        0  _printf_pad.o(.text)
    .text                                    0x00000302   Section        0  rt_memcpy.o(.text)
    .text                                    0x00000384   Section        0  rt_memclr.o(.text)
    .text                                    0x000003c4   Section        0  heapauxi.o(.text)
    .text                                    0x000003ca   Section        0  ffixui.o(.text)
    .text                                    0x000003fa   Section        2  use_no_semi.o(.text)
    .text                                    0x000003fc   Section        0  indicate_semi.o(.text)
    i.osRtxErrorNotify                       0x000003fc   Section        0  rtx_config.o(i.osRtxErrorNotify)
    x$fpl$usenofp                            0x000003fe   Section        0  usenofp.o(x$fpl$usenofp)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section        0  __printf_wp.o(.text)
    .text                                    0x0000051e   Section      488  aeabi_sdivfast.o(.text)
    .text                                    0x00000708   Section        0  f2d.o(.text)
    .text                                    0x0000075c   Section        0  fdiv.o(.text)
    .text                                    0x000008bc   Section        0  ffixi.o(.text)
    .text                                    0x00000908   Section        0  fflti.o(.text)
    .text                                    0x00000966   Section        0  _rserrno.o(.text)
    .text                                    0x0000097c   Section        0  _printf_fp_dec.o(.text)
    _fp_digits                               0x0000097f   Thumb Code   412  _printf_fp_dec.o(.text)
    .text                                    0x00000d94   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x00000d95   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x00000dc4   Section        0  _sputc.o(.text)
    .text                                    0x00000dd0   Section        0  frnd.o(.text)
    .text                                    0x00000e50   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x00000e5a   Section        8  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x00000e62   Section        0  lludiv10.o(.text)
    .text                                    0x00000edc   Section        0  _printf_fp_infnan.o(.text)
    .text                                    0x00000f64   Section        0  bigflt0.o(.text)
    .text                                    0x0000103c   Section        0  btod.o(.text)
    btod_internal_mul                        0x0000107d   Thumb Code   492  btod.o(.text)
    btod_internal_div                        0x00001269   Thumb Code   520  btod.o(.text)
    .text                                    0x000015bc   Section        0  rtudiv10.o(.text)
    .text                                    0x000015e4   Section        0  fscalbn.o(.text)
    .text                                    0x00001628   Section        8  libspace.o(.text)
    .text                                    0x00001630   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x0000166e   Section        0  exit.o(.text)
    .text                                    0x00001680   Section      160  strcmpv6m.o(.text)
    .text                                    0x00001720   Section        0  sys_exit.o(.text)
    .text                                    0x0000172c   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x00001766   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x00001767   Thumb Code    76  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x000017b2   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x000017b3   Thumb Code    96  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00001812   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x00001813   Thumb Code    40  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0000183c   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x00001844   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00001848   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x00001868   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x0000186c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x00001870   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00001874   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0000187c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x000018b8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x000018bc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x000018c0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x000018c4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x000018c8   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x000018c9   Thumb Code    82  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0000191c   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x0000191d   Thumb Code    76  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x00001964   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001968   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x0000198c   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00001990   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.3_0                             0x000019b8   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.3_1                             0x000019bc   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x000019c0   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.0_0                             0x000019e0   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x000019e4   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.5_0                             0x00001a04   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00001a08   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x00001a7c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00001a80   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x00001aa0   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00001aa4   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00001b20   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00001b24   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00001b48   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00001b4c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x00001b70   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00001b74   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x00001b94   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00001b98   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00001bbc   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00001bc0   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00001c3c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00001c8a   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00001cc4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00001cfc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00001d3c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00001d80   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00001d81   Thumb Code   222  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00001e5e   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00001e9c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00001f20   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00001f24   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x00001f88   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00001f8c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00001f90   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00001f91   Thumb Code    60  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00001fc8   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00001fcc   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x00001fcd   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x00002054   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00002058   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x00002059   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x000020b4   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x000020b8   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x000020f0   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x000020f4   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x00002148   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x0000214c   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x0000214d   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x0000219c   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x000021a0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x000021b8   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x000021f2   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x0000220a   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x00002230   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x00002231   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00002258   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x0000226c   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00002270   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00002278   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x0000229c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x000022a0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x000022a4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x000022f0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x000022f4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x000022f8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x000022fc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00002300   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x00002310   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00002314   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x00002348   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x0000234c   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00002370   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x000023e0   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x000023e4   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00002418   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x0000241c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x00002420   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00002424   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00002425   Thumb Code    96  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00002480   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00002484   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x0000248c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00002490   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.34_0                            0x000024e8   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x000024ec   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.37_0                            0x00002510   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x00002514   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_0                            0x00002530   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x00002534   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x00002554   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00002558   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x00002559   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0000256c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x0000256d   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.4_0                             0x00002574   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00002578   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x00002579   Thumb Code   380  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_0                            0x000026e8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_1                            0x000026ec   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_2                            0x000026f0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000026f4   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x000026f5   Thumb Code   136  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_0                            0x0000276c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_1                            0x00002770   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_2                            0x00002774   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_3                            0x00002778   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0000277c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x0000277d   Thumb Code   240  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x00002868   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0000286c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x0000286d   Thumb Code   468  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x00002a28   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00002a2c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_2                            0x00002a30   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_3                            0x00002a34   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_4                            0x00002a38   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_5                            0x00002a3c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00002a40   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00002a41   Thumb Code   208  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x00002b0c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00002b10   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x00002b11   Thumb Code   160  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00002bac   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00002bb0   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00002bb1   Thumb Code   208  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x00002c7c   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00002c80   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00002c81   Thumb Code   120  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x00002cf4   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00002cf8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00002cf9   Thumb Code   192  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00002db4   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00002db8   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00002db9   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00002e20   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00002e24   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsSet                     0x00002e25   Thumb Code   118  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00002e9c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadFlagsWait                    0x00002e9d   Thumb Code    76  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    __arm_cp.61_0                            0x00002ee4   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x00002ee8   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadGetId                        0x00002ee9   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.41_0                            0x00002ef0   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x00002ef4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x00002ef5   Thumb Code   512  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x000030dc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x000030e0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x000030e4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x000030e8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x000030ec   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_5                            0x000030f0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.Configure_DMA_For_Playback             0x000030f4   Section        0  dma.o(i.Configure_DMA_For_Playback)
    i.Configure_TPM0_for_DMA                 0x00003148   Section        0  timers.o(i.Configure_TPM0_for_DMA)
    i.Control_RGB_LEDs                       0x00003160   Section        0  leds.o(i.Control_RGB_LEDs)
    i.Create_OS_Objects                      0x00003198   Section        0  threads.o(i.Create_OS_Objects)
    i.DAC_Init                               0x00003208   Section        0  sound.o(i.DAC_Init)
    i.DMA0_IRQHandler                        0x00003244   Section        0  dma.o(i.DMA0_IRQHandler)
    i.DMA_Init                               0x00003290   Section        0  dma.o(i.DMA_Init)
    i.Delay                                  0x000032ac   Section        0  delay.o(i.Delay)
    i.Init_ADC                               0x000032c4   Section        0  touchscreen.o(i.Init_ADC)
    i.Init_Debug_Signals                     0x000032e4   Section        0  debug.o(i.Init_Debug_Signals)
    i.Init_RGB_LEDs                          0x00003368   Section        0  leds.o(i.Init_RGB_LEDs)
    i.Init_Voices                            0x000033cc   Section        0  sound.o(i.Init_Voices)
    i.Init_Waveform                          0x000033f4   Section        0  sound.o(i.Init_Waveform)
    i.LCD_24S_Write_Command                  0x0000341c   Section        0  st7789.o(i.LCD_24S_Write_Command)
    LCD_24S_Write_Command                    0x0000341d   Thumb Code    36  st7789.o(i.LCD_24S_Write_Command)
    i.LCD_24S_Write_Data                     0x00003444   Section        0  st7789.o(i.LCD_24S_Write_Data)
    LCD_24S_Write_Data                       0x00003445   Thumb Code    36  st7789.o(i.LCD_24S_Write_Data)
    i.LCD_Controller_Init                    0x0000346c   Section        0  st7789.o(i.LCD_Controller_Init)
    i.LCD_Draw_Line                          0x000034c4   Section        0  lcd_graphics.o(i.LCD_Draw_Line)
    i.LCD_Erase                              0x000036c4   Section        0  lcd_text.o(i.LCD_Erase)
    i.LCD_Fill_Buffer                        0x000036d4   Section        0  st7789.o(i.LCD_Fill_Buffer)
    i.LCD_Fill_Rectangle                     0x00003756   Section        0  st7789.o(i.LCD_Fill_Rectangle)
    i.LCD_GPIO_Init                          0x00003824   Section        0  st7789.o(i.LCD_GPIO_Init)
    i.LCD_Init                               0x000038e4   Section        0  st7789.o(i.LCD_Init)
    i.LCD_Plot_Pixel                         0x00003948   Section        0  st7789.o(i.LCD_Plot_Pixel)
    i.LCD_Start_Rectangle                    0x000039ba   Section        0  st7789.o(i.LCD_Start_Rectangle)
    i.LCD_TS_Init                            0x00003a50   Section        0  touchscreen.o(i.LCD_TS_Init)
    i.LCD_TS_Read                            0x00003a58   Section        0  touchscreen.o(i.LCD_TS_Read)
    i.LCD_Text_GetGlyphWidth                 0x00003bf8   Section        0  lcd_text.o(i.LCD_Text_GetGlyphWidth)
    i.LCD_Text_Init                          0x00003c18   Section        0  lcd_text.o(i.LCD_Text_Init)
    i.LCD_Text_PrintChar                     0x00003c74   Section        0  lcd_text.o(i.LCD_Text_PrintChar)
    i.LCD_Text_PrintStr_RC                   0x00003eb8   Section        0  lcd_text.o(i.LCD_Text_PrintStr_RC)
    i.LCD_Write_Rectangle_Pixel              0x00003f0c   Section        0  st7789.o(i.LCD_Write_Rectangle_Pixel)
    i.PIT_IRQHandler                         0x00003f3c   Section        0  timers.o(i.PIT_IRQHandler)
    i.PWM_Init                               0x00003fe4   Section        0  timers.o(i.PWM_Init)
    i.Play_Waveform_with_DMA                 0x00004050   Section        0  sound.o(i.Play_Waveform_with_DMA)
    i.SineTable_Init                         0x0000406c   Section        0  sound.o(i.SineTable_Init)
    i.Sound_Disable_Amp                      0x000040a8   Section        0  sound.o(i.Sound_Disable_Amp)
    i.Sound_Enable_Amp                       0x000040b8   Section        0  sound.o(i.Sound_Enable_Amp)
    i.Sound_Generate_Next_Sample             0x000040c8   Section        0  sound.o(i.Sound_Generate_Next_Sample)
    i.Sound_Init                             0x00004140   Section        0  sound.o(i.Sound_Init)
    i.Start_DMA_Playback                     0x000041b0   Section        0  dma.o(i.Start_DMA_Playback)
    i.SystemInit                             0x000041fc   Section        0  system_mkl25z4.o(i.SystemInit)
    i.TPM0_IRQHandler                        0x000042e4   Section        0  timers.o(i.TPM0_IRQHandler)
    i.TPM0_Init                              0x000042f4   Section        0  timers.o(i.TPM0_Init)
    i.TPM0_Start                             0x00004314   Section        0  timers.o(i.TPM0_Start)
    i.Thread_Read_Accelerometer              0x00004324   Section        0  threads.o(i.Thread_Read_Accelerometer)
    i.Thread_Read_TS                         0x000043c8   Section        0  threads.o(i.Thread_Read_TS)
    i.Thread_Refill_Sound_Buffer             0x00004490   Section        0  sound.o(i.Thread_Refill_Sound_Buffer)
    i.Thread_Sound_Manager                   0x00004530   Section        0  sound.o(i.Thread_Sound_Manager)
    i.Thread_Update_Screen                   0x000045bc   Section        0  threads.o(i.Thread_Update_Screen)
    i.__ARM_common_ll_muluu                  0x000046b0   Section        0  btod.o(i.__ARM_common_ll_muluu)
    i.__ARM_fpclassify                       0x000046e0   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__ARM_fpclassifyf                      0x0000470c   Section        0  fpclassifyf.o(i.__ARM_fpclassifyf)
    i.__mathlib_flt_infnan                   0x0000472e   Section        0  funder.o(i.__mathlib_flt_infnan)
    i.__mathlib_flt_invalid                  0x00004738   Section        0  funder.o(i.__mathlib_flt_invalid)
    i.__mathlib_flt_underflow                0x00004744   Section        0  funder.o(i.__mathlib_flt_underflow)
    i.__mathlib_rredf2                       0x00004754   Section        0  rredf.o(i.__mathlib_rredf2)
    i.__user_perthread_libspace              0x000048d4   Section        0  rtx_lib.o(i.__user_perthread_libspace)
    i._is_digit                              0x00004920   Section        0  __printf_wp.o(i._is_digit)
    i._mutex_acquire                         0x0000492e   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x0000492f   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00004946   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00004947   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x00004950   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x00004951   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00004972   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00004973   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00004986   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.approx_atan2f                          0x00004990   Section        0  mma8451.o(i.approx_atan2f)
    i.approx_sqrtf                           0x00004a74   Section        0  mma8451.o(i.approx_sqrtf)
    i.convert_xyz_to_roll_pitch              0x00004a88   Section        0  mma8451.o(i.convert_xyz_to_roll_pitch)
    i.i2c_busy                               0x00004ae8   Section        0  i2c.o(i.i2c_busy)
    i.i2c_init                               0x00004b90   Section        0  i2c.o(i.i2c_init)
    i.i2c_read_byte                          0x00004bd8   Section        0  i2c.o(i.i2c_read_byte)
    i.i2c_read_setup                         0x00004c34   Section        0  i2c.o(i.i2c_read_setup)
    i.i2c_repeated_read                      0x00004c68   Section        0  i2c.o(i.i2c_repeated_read)
    i.i2c_start                              0x00004ca8   Section        0  i2c.o(i.i2c_start)
    i.i2c_wait                               0x00004cc0   Section        0  i2c.o(i.i2c_wait)
    i.i2c_write_byte                         0x00004cf4   Section        0  i2c.o(i.i2c_write_byte)
    i.init_mma                               0x00004d2c   Section        0  mma8451.o(i.init_mma)
    i.main                                   0x00004d64   Section        0  main.o(i.main)
    i.osRtxIdleThread                        0x00004e04   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x00004e14   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x00004e15   Thumb Code    26  rtx_lib.o(i.os_kernel_is_active)
    i.read_full_xyz                          0x00004e34   Section        0  mma8451.o(i.read_full_xyz)
    i.sinf                                   0x00004e88   Section        0  sinf.o(i.sinf)
    locale$$code                             0x0000500c   Section       44  lc_numeric_c.o(locale$$code)
    x$fpl$fadd                               0x00005038   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x00005045   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fmul                               0x000050c4   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$frsb                               0x00005174   Section       24  faddsub.o(x$fpl$frsb)
    x$fpl$fsub                               0x0000518c   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x00005199   Thumb Code     0  faddsub.o(x$fpl$fsub)
    x$fpl$printf1                            0x0000525c   Section       16  printf1.o(x$fpl$printf1)
    .constdata                               0x0000526c   Section      196  threads.o(.constdata)
    .constdata                               0x00005330   Section     3831  lucida_12x19.o(.constdata)
    .constdata                               0x00006227   Section      142  st7789.o(.constdata)
    .constdata                               0x000062b8   Section       32  region.o(.constdata)
    .constdata                               0x000062d8   Section        4  region.o(.constdata)
    .constdata                               0x000062dc   Section       36  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x000062dc   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x00006300   Section       36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x00006300   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x00006324   Section       24  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00006324   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x0000633c   Section        4  rtx_lib.o(.constdata)
    .constdata                               0x00006340   Section       64  fdiv.o(.constdata)
    fdiv_tab                                 0x00006340   Data          64  fdiv.o(.constdata)
    .constdata                               0x00006380   Section       32  rredf.o(.constdata)
    twooverpi                                0x00006380   Data          32  rredf.o(.constdata)
    .constdata                               0x000063a0   Section      148  bigflt0.o(.constdata)
    tenpwrs_x                                0x000063a0   Data          60  bigflt0.o(.constdata)
    tenpwrs_i                                0x000063dc   Data          64  bigflt0.o(.constdata)
    .conststring                             0x00006434   Section       10  threads.o(.conststring)
    .rodata                                  0x00006440   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00006440   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x000064a8   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x000064a8   Data          11  rtx_kernel.o(.rodata.str1.4)
    locale$$data                             0x000064d4   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x000064d8   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x000064e0   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x000064ec   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x000064ee   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x000064ef   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x000064f0   Data           0  lc_numeric_c.o(locale$$data)
    .bss.os                                  0x1ffff000   Section     4096  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff000   Data        4096  rtx_lib.o(.bss.os)
    .bss.os                                  0x20000000   Section       64  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20000000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.libspace                         0x20000040   Section      496  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20000040   Data         480  rtx_lib.o(.bss.os.libspace)
    os_libspace_id                           0x20000220   Data          16  rtx_lib.o(.bss.os.libspace)
    .bss.os.msgqueue.cb                      0x20000230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20000230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20000264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20000264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200002b4   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200002b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x200002f8   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200002f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20000340   Section      200  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20000340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.thread.stack                     0x20000408   Section      200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20000408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200004d0   Section       20  dma.o(.data)
    .data                                    0x200004e4   Section        8  i2c.o(.data)
    .data                                    0x200004ec   Section       16  mma8451.o(.data)
    .data                                    0x200004fc   Section        1  sound.o(.data)
    .data                                    0x20000500   Section       24  threads.o(.data)
    .data                                    0x20000518   Section        4  timers.o(.data)
    .data                                    0x2000051c   Section       28  lcd_text.o(.data)
    .data                                    0x20000538   Section       40  touchscreen.o(.data)
    xl                                       0x2000053a   Data           2  touchscreen.o(.data)
    yu                                       0x2000053c   Data           2  touchscreen.o(.data)
    .data                                    0x20000560   Section        4  profile.o(.data)
    .data                                    0x20000564   Section        4  profile.o(.data)
    .data                                    0x20000568   Section        4  profile.o(.data)
    .data                                    0x2000056c   Section        1  profile.o(.data)
    .data                                    0x20000570   Section        4  region.o(.data)
    .data                                    0x20000574   Section        1  rtx_lib.o(.data)
    os_kernel_active                         0x20000574   Data           1  rtx_lib.o(.data)
    .data                                    0x20000578   Section        4  system_mkl25z4.o(.data)
    .bss                                     0x20000620   Section     2336  sound.o(.bss)
    .bss                                     0x20000f40   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x20000fa0   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x20000fa0   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x20000fa8   Section        0  startup_mkl25z4.o(HEAP)
    STACK                                    0x20000fa8   Section     1024  startup_mkl25z4.o(STACK)
    Heap_Mem                                 0x20000fa8   Data           0  startup_mkl25z4.o(HEAP)
    Stack_Mem                                0x20000fa8   Data        1024  startup_mkl25z4.o(STACK)
    __initial_sp                             0x200013a8   Data           0  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x00000121   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_f                                0x00000123   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_percent_end                      0x0000012d   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x00000131   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_preinit_1                  0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000139   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000139   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000139   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_2               0x00000139   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000016)
    __rt_lib_init_alloca_1                   0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_numeric_1               0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_return                     0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000143   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x00000145   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000147   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000149   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000149   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000149   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0000014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0000015b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000015b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000163   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000165   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000165   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000169   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000171   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000171   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x000001a9   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x000001b5   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x000001b7   Thumb Code     2  startup_mkl25z4.o(.text)
    ADC0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTA_IRQHandler                         0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTD_IRQHandler                         0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM2_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    UART0_IRQHandler                         0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    UART2_IRQHandler                         0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x000001bf   Thumb Code     0  startup_mkl25z4.o(.text)
    __user_initial_stackheap                 0x000001c5   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000001e9   Thumb Code   132  irq_cm0.o(.text)
    PendSV_Handler                           0x0000026d   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x00000279   Thumb Code    12  irq_cm0.o(.text)
    __2sprintf                               0x0000028d   Thumb Code    36  noretval__2sprintf.o(.text)
    _printf_pre_padding                      0x000002b5   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x000002e1   Thumb Code    34  _printf_pad.o(.text)
    __aeabi_memcpy                           0x00000303   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x00000303   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x00000385   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x0000039f   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x000003bd   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x000003bd   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x000003c1   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x000003c1   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x000003c1   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x000003c5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000003c7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000003c9   Thumb Code     2  heapauxi.o(.text)
    __aeabi_f2uiz                            0x000003cb   Thumb Code     0  ffixui.o(.text)
    _ffixu                                   0x000003cb   Thumb Code    48  ffixui.o(.text)
    __I$use$semihosting                      0x000003fb   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000003fb   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000003fd   Thumb Code     0  indicate_semi.o(.text)
    osRtxErrorNotify                         0x000003fd   Thumb Code     2  rtx_config.o(i.osRtxErrorNotify)
    __I$use$fp                               0x000003fe   Number         0  usenofp.o(x$fpl$usenofp)
    __printf                                 0x00000411   Thumb Code   270  __printf_wp.o(.text)
    __aeabi_uidiv                            0x0000051f   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_uidivmod                         0x0000051f   Thumb Code    28  aeabi_sdivfast.o(.text)
    __aeabi_idiv                             0x0000053b   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_idivmod                          0x0000053b   Thumb Code   460  aeabi_sdivfast.o(.text)
    __aeabi_f2d                              0x00000709   Thumb Code     0  f2d.o(.text)
    _f2d                                     0x00000709   Thumb Code    80  f2d.o(.text)
    __aeabi_fdiv                             0x0000075d   Thumb Code     0  fdiv.o(.text)
    _fdiv                                    0x0000075d   Thumb Code   334  fdiv.o(.text)
    _frdiv                                   0x000008ab   Thumb Code     8  fdiv.o(.text)
    __aeabi_f2iz                             0x000008bd   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x000008bd   Thumb Code    76  ffixi.o(.text)
    __aeabi_i2f_normalise                    0x00000909   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x00000951   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x00000951   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x00000961   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x00000961   Thumb Code     0  fflti.o(.text)
    __read_errno                             0x00000967   Thumb Code    10  _rserrno.o(.text)
    __set_errno                              0x00000971   Thumb Code    12  _rserrno.o(.text)
    __lib_sel_fp_printf                      0x0000097d   Thumb Code     2  _printf_fp_dec.o(.text)
    _printf_fp_dec_real                      0x00000b1b   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_char_common                      0x00000d9f   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x00000dc5   Thumb Code    10  _sputc.o(.text)
    _frnd                                    0x00000dd1   Thumb Code   122  frnd.o(.text)
    __rt_locale                              0x00000e51   Thumb Code    10  rt_locale_twolibspace.o(.text)
    __aeabi_errno_addr                       0x00000e5b   Thumb Code     8  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x00000e5b   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x00000e5b   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    _ll_udiv10                               0x00000e63   Thumb Code   122  lludiv10.o(.text)
    _printf_fp_infnan                        0x00000edd   Thumb Code   120  _printf_fp_infnan.o(.text)
    _btod_etento                             0x00000f65   Thumb Code   210  bigflt0.o(.text)
    _btod_d2e                                0x0000103d   Thumb Code    64  btod.o(.text)
    _btod_emul                               0x00001471   Thumb Code    28  btod.o(.text)
    _btod_emuld                              0x0000148d   Thumb Code   144  btod.o(.text)
    _btod_ediv                               0x0000151d   Thumb Code    26  btod.o(.text)
    _btod_edivd                              0x00001537   Thumb Code   124  btod.o(.text)
    __rt_udiv10                              0x000015bd   Thumb Code    40  rtudiv10.o(.text)
    __ARM_scalbnf                            0x000015e5   Thumb Code    64  fscalbn.o(.text)
    __user_libspace                          0x00001629   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00001629   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x00001631   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x0000166f   Thumb Code    16  exit.o(.text)
    strcmp                                   0x00001681   Thumb Code   160  strcmpv6m.o(.text)
    _sys_exit                                0x00001721   Thumb Code     8  sys_exit.o(.text)
    __decompress                             0x0000172d   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x0000172d   Thumb Code    58  __dczerorl.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x0000183d   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00001849   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00001875   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0000187d   Thumb Code    76  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x00001969   Thumb Code    40  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x00001991   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x000019c1   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x000019e5   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00001a09   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x00001a81   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00001aa5   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00001b25   Thumb Code    40  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00001b4d   Thumb Code    40  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00001b75   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00001b99   Thumb Code    40  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x00001bc1   Thumb Code   124  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00001c3d   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00001c8b   Thumb Code    58  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00001cc5   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00001cfd   Thumb Code    64  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00001d3d   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x00001e5f   Thumb Code    62  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00001e9d   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00001f25   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x000020b9   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x000020f5   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x000021a1   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x000021b9   Thumb Code    58  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x000021f3   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0000220b   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00002259   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00002271   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x00002279   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x000022a5   Thumb Code    92  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00002301   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00002315   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x0000234d   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00002371   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x000023e5   Thumb Code    64  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00002485   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x00002491   Thumb Code    92  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x000024ed   Thumb Code    40  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x00002515   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x00002535   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    Configure_DMA_For_Playback               0x000030f5   Thumb Code    56  dma.o(i.Configure_DMA_For_Playback)
    Configure_TPM0_for_DMA                   0x00003149   Thumb Code    20  timers.o(i.Configure_TPM0_for_DMA)
    Control_RGB_LEDs                         0x00003161   Thumb Code    50  leds.o(i.Control_RGB_LEDs)
    Create_OS_Objects                        0x00003199   Thumb Code    84  threads.o(i.Create_OS_Objects)
    DAC_Init                                 0x00003209   Thumb Code    48  sound.o(i.DAC_Init)
    DMA0_IRQHandler                          0x00003245   Thumb Code    60  dma.o(i.DMA0_IRQHandler)
    DMA_Init                                 0x00003291   Thumb Code    24  dma.o(i.DMA_Init)
    Delay                                    0x000032ad   Thumb Code    18  delay.o(i.Delay)
    Init_ADC                                 0x000032c5   Thumb Code    24  touchscreen.o(i.Init_ADC)
    Init_Debug_Signals                       0x000032e5   Thumb Code   116  debug.o(i.Init_Debug_Signals)
    Init_RGB_LEDs                            0x00003369   Thumb Code    84  leds.o(i.Init_RGB_LEDs)
    Init_Voices                              0x000033cd   Thumb Code    36  sound.o(i.Init_Voices)
    Init_Waveform                            0x000033f5   Thumb Code    32  sound.o(i.Init_Waveform)
    LCD_Controller_Init                      0x0000346d   Thumb Code    84  st7789.o(i.LCD_Controller_Init)
    LCD_Draw_Line                            0x000034c5   Thumb Code   510  lcd_graphics.o(i.LCD_Draw_Line)
    LCD_Erase                                0x000036c5   Thumb Code    10  lcd_text.o(i.LCD_Erase)
    LCD_Fill_Buffer                          0x000036d5   Thumb Code   130  st7789.o(i.LCD_Fill_Buffer)
    LCD_Fill_Rectangle                       0x00003757   Thumb Code   206  st7789.o(i.LCD_Fill_Rectangle)
    LCD_GPIO_Init                            0x00003825   Thumb Code   174  st7789.o(i.LCD_GPIO_Init)
    LCD_Init                                 0x000038e5   Thumb Code    74  st7789.o(i.LCD_Init)
    LCD_Plot_Pixel                           0x00003949   Thumb Code   114  st7789.o(i.LCD_Plot_Pixel)
    LCD_Start_Rectangle                      0x000039bb   Thumb Code   150  st7789.o(i.LCD_Start_Rectangle)
    LCD_TS_Init                              0x00003a51   Thumb Code     8  touchscreen.o(i.LCD_TS_Init)
    LCD_TS_Read                              0x00003a59   Thumb Code   394  touchscreen.o(i.LCD_TS_Read)
    LCD_Text_GetGlyphWidth                   0x00003bf9   Thumb Code    22  lcd_text.o(i.LCD_Text_GetGlyphWidth)
    LCD_Text_Init                            0x00003c19   Thumb Code    58  lcd_text.o(i.LCD_Text_Init)
    LCD_Text_PrintChar                       0x00003c75   Thumb Code   550  lcd_text.o(i.LCD_Text_PrintChar)
    LCD_Text_PrintStr_RC                     0x00003eb9   Thumb Code    76  lcd_text.o(i.LCD_Text_PrintStr_RC)
    LCD_Write_Rectangle_Pixel                0x00003f0d   Thumb Code    48  st7789.o(i.LCD_Write_Rectangle_Pixel)
    PIT_IRQHandler                           0x00003f3d   Thumb Code   130  timers.o(i.PIT_IRQHandler)
    PWM_Init                                 0x00003fe5   Thumb Code    92  timers.o(i.PWM_Init)
    Play_Waveform_with_DMA                   0x00004051   Thumb Code    20  sound.o(i.Play_Waveform_with_DMA)
    SineTable_Init                           0x0000406d   Thumb Code    48  sound.o(i.SineTable_Init)
    Sound_Disable_Amp                        0x000040a9   Thumb Code    10  sound.o(i.Sound_Disable_Amp)
    Sound_Enable_Amp                         0x000040b9   Thumb Code    10  sound.o(i.Sound_Enable_Amp)
    Sound_Generate_Next_Sample               0x000040c9   Thumb Code   110  sound.o(i.Sound_Generate_Next_Sample)
    Sound_Init                               0x00004141   Thumb Code    92  sound.o(i.Sound_Init)
    Start_DMA_Playback                       0x000041b1   Thumb Code    60  dma.o(i.Start_DMA_Playback)
    SystemInit                               0x000041fd   Thumb Code   186  system_mkl25z4.o(i.SystemInit)
    TPM0_IRQHandler                          0x000042e5   Thumb Code    12  timers.o(i.TPM0_IRQHandler)
    TPM0_Init                                0x000042f5   Thumb Code    22  timers.o(i.TPM0_Init)
    TPM0_Start                               0x00004315   Thumb Code    12  timers.o(i.TPM0_Start)
    Thread_Read_Accelerometer                0x00004325   Thumb Code   118  threads.o(i.Thread_Read_Accelerometer)
    Thread_Read_TS                           0x000043c9   Thumb Code   172  threads.o(i.Thread_Read_TS)
    Thread_Refill_Sound_Buffer               0x00004491   Thumb Code   140  sound.o(i.Thread_Refill_Sound_Buffer)
    Thread_Sound_Manager                     0x00004531   Thumb Code   112  sound.o(i.Thread_Sound_Manager)
    Thread_Update_Screen                     0x000045bd   Thumb Code   226  threads.o(i.Thread_Update_Screen)
    __ARM_common_ll_muluu                    0x000046b1   Thumb Code    48  btod.o(i.__ARM_common_ll_muluu)
    __ARM_fpclassify                         0x000046e1   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    __ARM_fpclassifyf                        0x0000470d   Thumb Code    34  fpclassifyf.o(i.__ARM_fpclassifyf)
    __mathlib_flt_infnan                     0x0000472f   Thumb Code    10  funder.o(i.__mathlib_flt_infnan)
    __mathlib_flt_invalid                    0x00004739   Thumb Code    12  funder.o(i.__mathlib_flt_invalid)
    __mathlib_flt_underflow                  0x00004745   Thumb Code    14  funder.o(i.__mathlib_flt_underflow)
    __mathlib_rredf2                         0x00004755   Thumb Code   366  rredf.o(i.__mathlib_rredf2)
    __user_perthread_libspace                0x000048d5   Thumb Code    66  rtx_lib.o(i.__user_perthread_libspace)
    _is_digit                                0x00004921   Thumb Code    14  __printf_wp.o(i._is_digit)
    _mutex_acquire                           0x0000492f   Thumb Code    24  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00004947   Thumb Code    10  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x00004951   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00004973   Thumb Code    20  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00004987   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    approx_atan2f                            0x00004991   Thumb Code   204  mma8451.o(i.approx_atan2f)
    approx_sqrtf                             0x00004a75   Thumb Code    20  mma8451.o(i.approx_sqrtf)
    convert_xyz_to_roll_pitch                0x00004a89   Thumb Code    86  mma8451.o(i.convert_xyz_to_roll_pitch)
    i2c_busy                                 0x00004ae9   Thumb Code   160  i2c.o(i.i2c_busy)
    i2c_init                                 0x00004b91   Thumb Code    60  i2c.o(i.i2c_init)
    i2c_read_byte                            0x00004bd9   Thumb Code    88  i2c.o(i.i2c_read_byte)
    i2c_read_setup                           0x00004c35   Thumb Code    48  i2c.o(i.i2c_read_setup)
    i2c_repeated_read                        0x00004c69   Thumb Code    54  i2c.o(i.i2c_repeated_read)
    i2c_start                                0x00004ca9   Thumb Code    20  i2c.o(i.i2c_start)
    i2c_wait                                 0x00004cc1   Thumb Code    42  i2c.o(i.i2c_wait)
    i2c_write_byte                           0x00004cf5   Thumb Code    52  i2c.o(i.i2c_write_byte)
    init_mma                                 0x00004d2d   Thumb Code    54  mma8451.o(i.init_mma)
    main                                     0x00004d65   Thumb Code   126  main.o(i.main)
    osRtxIdleThread                          0x00004e05   Thumb Code    10  rtx_config.o(i.osRtxIdleThread)
    read_full_xyz                            0x00004e35   Thumb Code    78  mma8451.o(i.read_full_xyz)
    sinf                                     0x00004e89   Thumb Code   330  sinf.o(i.sinf)
    _get_lc_numeric                          0x0000500d   Thumb Code    44  lc_numeric_c.o(locale$$code)
    __aeabi_fadd                             0x00005039   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x00005039   Thumb Code   134  faddsub.o(x$fpl$fadd)
    __aeabi_fmul                             0x000050c5   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x000050c5   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_frsub                            0x00005175   Thumb Code     0  faddsub.o(x$fpl$frsb)
    _frsb                                    0x00005175   Thumb Code    24  faddsub.o(x$fpl$frsb)
    __aeabi_fsub                             0x0000518d   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x0000518d   Thumb Code   204  faddsub.o(x$fpl$fsub)
    _printf_fp_dec                           0x0000525d   Thumb Code    16  printf1.o(x$fpl$printf1)
    Read_TS_attr                             0x0000526c   Data          36  threads.o(.constdata)
    Read_Accelerometer_attr                  0x00005290   Data          36  threads.o(.constdata)
    Update_Screen_attr                       0x000052b4   Data          36  threads.o(.constdata)
    Sound_Manager_attr                       0x000052d8   Data          36  threads.o(.constdata)
    Refill_Sound_Buffer_attr                 0x000052fc   Data          36  threads.o(.constdata)
    LCD_mutex_attr                           0x00005320   Data          16  threads.o(.constdata)
    Lucida_Console12x19                      0x00005330   Data        3831  lucida_12x19.o(.constdata)
    Init_Seq_ST7789                          0x00006227   Data         142  st7789.o(.constdata)
    RegionTable                              0x000062b8   Data          32  region.o(.constdata)
    NumProfileRegions                        0x000062d8   Data           4  region.o(.constdata)
    osRtxUserSVC                             0x0000633c   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x00006440   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x000064b4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000064d4   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20000230   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20000264   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200002b4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000033c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    read_buffer_num                          0x200004d0   Data           1  dma.o(.data)
    Reload_DMA_Byte_Count                    0x200004d4   Data           4  dma.o(.data)
    DMA_Playback_Count                       0x200004d8   Data           4  dma.o(.data)
    Reload_DMA_Source                        0x200004dc   Data           8  dma.o(.data)
    lock_detect                              0x200004e4   Data           4  i2c.o(.data)
    i2c_lock                                 0x200004e8   Data           4  i2c.o(.data)
    acc_X                                    0x200004ec   Data           2  mma8451.o(.data)
    acc_Y                                    0x200004ee   Data           2  mma8451.o(.data)
    acc_Z                                    0x200004f0   Data           2  mma8451.o(.data)
    roll                                     0x200004f4   Data           4  mma8451.o(.data)
    pitch                                    0x200004f8   Data           4  mma8451.o(.data)
    write_buffer_num                         0x200004fc   Data           1  sound.o(.data)
    t_Read_TS                                0x20000500   Data           4  threads.o(.data)
    t_Read_Accelerometer                     0x20000504   Data           4  threads.o(.data)
    t_Sound_Manager                          0x20000508   Data           4  threads.o(.data)
    t_US                                     0x2000050c   Data           4  threads.o(.data)
    t_Refill_Sound_Buffer                    0x20000510   Data           4  threads.o(.data)
    LCD_mutex                                0x20000514   Data           4  threads.o(.data)
    PC_val                                   0x20000518   Data           4  timers.o(.data)
    font                                     0x2000051c   Data           4  lcd_text.o(.data)
    font_header                              0x20000520   Data           4  lcd_text.o(.data)
    glyph_index                              0x20000524   Data           4  lcd_text.o(.data)
    fg                                       0x20000528   Data           3  lcd_text.o(.data)
    bg                                       0x2000052b   Data           3  lcd_text.o(.data)
    G_LCD_char_width                         0x2000052e   Data           1  lcd_text.o(.data)
    G_LCD_char_height                        0x2000052f   Data           1  lcd_text.o(.data)
    fonts                                    0x20000530   Data           8  lcd_text.o(.data)
    LCD_TS_Calibrated                        0x20000538   Data           1  touchscreen.o(.data)
    LCD_TS_X_Scale                           0x20000540   Data           4  touchscreen.o(.data)
    LCD_TS_X_Offset                          0x20000544   Data           4  touchscreen.o(.data)
    LCD_TS_Y_Scale                           0x20000548   Data           4  touchscreen.o(.data)
    LCD_TS_Y_Offset                          0x2000054c   Data           4  touchscreen.o(.data)
    TS_Min                                   0x20000550   Data           8  touchscreen.o(.data)
    TS_Max                                   0x20000558   Data           8  touchscreen.o(.data)
    adx_lost                                 0x20000560   Data           4  profile.o(.data)
    num_lost                                 0x20000564   Data           4  profile.o(.data)
    profile_samples                          0x20000568   Data           4  profile.o(.data)
    profiling_enabled                        0x2000056c   Data           1  profile.o(.data)
    RegionCount                              0x20000570   Data           4  region.o(.data)
    SystemCoreClock                          0x20000578   Data           4  system_mkl25z4.o(.data)
    osRtxInfo                                0x2000057c   Data         164  rtx_kernel.o(.data.os)
    SineTable                                0x20000620   Data         128  sound.o(.bss)
    Waveform                                 0x200006a0   Data        2048  sound.o(.bss)
    Voice                                    0x20000ea0   Data         160  sound.o(.bss)
    __libspace_start                         0x20000f40   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000fa0   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00007b10, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00006538])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000064f0, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO         1084    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000008   Code   RO         1652  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO         1923    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO         1925    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO         1639    .ARM.Collect$$_printf_percent$$00000000  c_p.l(_printf_percent.o)
    0x00000122   0x00000122   0x0000000a   Code   RO         1638    .ARM.Collect$$_printf_percent$$00000003  c_p.l(_printf_f.o)
    0x0000012c   0x0000012c   0x00000004   Code   RO         1696    .ARM.Collect$$_printf_percent$$00000017  c_p.l(_printf_percent_end.o)
    0x00000130   0x00000130   0x00000002   Code   RO         1794    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x00000132   0x00000132   0x00000000   Code   RO         1796    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO         1798    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO         1801    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO         1803    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO         1805    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000006   Code   RO         1806    .ARM.Collect$$libinit$$0000000F  c_p.l(libinit2.o)
    0x00000138   0x00000138   0x00000000   Code   RO         1808    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x00000138   0x00000138   0x00000000   Code   RO         1810    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x00000138   0x00000138   0x00000000   Code   RO         1812    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x00000138   0x00000138   0x0000000a   Code   RO         1813    .ARM.Collect$$libinit$$00000016  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1814    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1816    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1818    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1820    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1822    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1824    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1826    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1828    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1832    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1834    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1836    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1838    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x00000142   0x00000142   0x00000002   Code   RO         1839    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x00000144   0x00000144   0x00000002   Code   RO         1887    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000146   0x00000146   0x00000000   Code   RO         1905    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000146   0x00000146   0x00000000   Code   RO         1907    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000146   0x00000146   0x00000000   Code   RO         1910    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000146   0x00000146   0x00000000   Code   RO         1913    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000146   0x00000146   0x00000000   Code   RO         1915    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000146   0x00000146   0x00000000   Code   RO         1918    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000146   0x00000146   0x00000002   Code   RO         1919    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000148   0x00000148   0x00000000   Code   RO         1683    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000148   0x00000148   0x00000000   Code   RO         1722    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000148   0x00000148   0x00000006   Code   RO         1734    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000014e   0x0000014e   0x00000008   Code   RO         1723    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x00000156   0x00000156   0x00000004   Code   RO         1725    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO         1727    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0000015a   0x0000015a   0x00000008   Code   RO         1728    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x00000162   0x00000162   0x00000002   Code   RO         1841    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000164   0x00000164   0x00000000   Code   RO         1856    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000164   0x00000164   0x00000004   Code   RO         1857    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000168   0x00000168   0x00000006   Code   RO         1858    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0000016e   0x0000016e   0x00000002   PAD
    0x00000170   0x00000170   0x00000038   Code   RO         1640    .emb_text           c_p.l(rt_memcpy.o)
    0x000001a8   0x000001a8   0x00000040   Code   RO         1086    .text               startup_mkl25z4.o
    0x000001e8   0x000001e8   0x000000a4   Code   RO         1383    .text               RTX_CM0.lib(irq_cm0.o)
    0x0000028c   0x0000028c   0x00000028   Code   RO         1612    .text               c_p.l(noretval__2sprintf.o)
    0x000002b4   0x000002b4   0x0000004e   Code   RO         1616    .text               c_p.l(_printf_pad.o)
    0x00000302   0x00000302   0x00000082   Code   RO         1641    .text               c_p.l(rt_memcpy.o)
    0x00000384   0x00000384   0x00000040   Code   RO         1644    .text               c_p.l(rt_memclr.o)
    0x000003c4   0x000003c4   0x00000006   Code   RO         1650    .text               c_p.l(heapauxi.o)
    0x000003ca   0x000003ca   0x00000030   Code   RO         1667    .text               fz_ps.l(ffixui.o)
    0x000003fa   0x000003fa   0x00000002   Code   RO         1874    .text               c_p.l(use_no_semi.o)
    0x000003fc   0x000003fc   0x00000000   Code   RO         1876    .text               c_p.l(indicate_semi.o)
    0x000003fc   0x000003fc   0x00000002   Code   RO          971    i.osRtxErrorNotify  rtx_config.o
    0x000003fe   0x000003fe   0x00000000   Code   RO         1699    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x000003fe   0x000003fe   0x00000002   PAD
    0x00000400   0x00000400   0x00000010   Code   RO         1085    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x0000010e   Code   RO         1626    .text               c_p.l(__printf_wp.o)
    0x0000051e   0x0000051e   0x000001e8   Code   RO         1646    .text               c_p.l(aeabi_sdivfast.o)
    0x00000706   0x00000706   0x00000002   PAD
    0x00000708   0x00000708   0x00000054   Code   RO         1654    .text               fz_ps.l(f2d.o)
    0x0000075c   0x0000075c   0x00000160   Code   RO         1662    .text               fz_ps.l(fdiv.o)
    0x000008bc   0x000008bc   0x0000004c   Code   RO         1665    .text               fz_ps.l(ffixi.o)
    0x00000908   0x00000908   0x0000005e   Code   RO         1669    .text               fz_ps.l(fflti.o)
    0x00000966   0x00000966   0x00000016   Code   RO         1688    .text               c_p.l(_rserrno.o)
    0x0000097c   0x0000097c   0x00000418   Code   RO         1690    .text               c_p.l(_printf_fp_dec.o)
    0x00000d94   0x00000d94   0x00000030   Code   RO         1692    .text               c_p.l(_printf_char_common.o)
    0x00000dc4   0x00000dc4   0x0000000a   Code   RO         1694    .text               c_p.l(_sputc.o)
    0x00000dce   0x00000dce   0x00000002   PAD
    0x00000dd0   0x00000dd0   0x00000080   Code   RO         1697    .text               fz_ps.l(frnd.o)
    0x00000e50   0x00000e50   0x0000000a   Code   RO         1743    .text               c_p.l(rt_locale_twolibspace.o)
    0x00000e5a   0x00000e5a   0x00000008   Code   RO         1750    .text               c_p.l(rt_errno_addr_twolibspace.o)
    0x00000e62   0x00000e62   0x0000007a   Code   RO         1752    .text               c_p.l(lludiv10.o)
    0x00000edc   0x00000edc   0x00000088   Code   RO         1754    .text               c_p.l(_printf_fp_infnan.o)
    0x00000f64   0x00000f64   0x000000d8   Code   RO         1758    .text               c_p.l(bigflt0.o)
    0x0000103c   0x0000103c   0x00000580   Code   RO         1761    .text               c_p.l(btod.o)
    0x000015bc   0x000015bc   0x00000028   Code   RO         1769    .text               c_p.l(rtudiv10.o)
    0x000015e4   0x000015e4   0x00000044   Code   RO         1771    .text               fz_ps.l(fscalbn.o)
    0x00001628   0x00001628   0x00000008   Code   RO         1777    .text               c_p.l(libspace.o)
    0x00001630   0x00001630   0x0000003e   Code   RO         1780    .text               c_p.l(sys_stackheap_outer.o)
    0x0000166e   0x0000166e   0x00000010   Code   RO         1783    .text               c_p.l(exit.o)
    0x0000167e   0x0000167e   0x00000002   PAD
    0x00001680   0x00001680   0x000000a0   Code   RO         1789    .text               c_p.l(strcmpv6m.o)
    0x00001720   0x00001720   0x0000000c   Code   RO         1853    .text               c_p.l(sys_exit.o)
    0x0000172c   0x0000172c   0x0000003a   Code   RO         1921    .text               c_p.l(__dczerorl.o)
    0x00001766   0x00001766   0x0000004c   Code   RO         1590    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x000017b2   0x000017b2   0x00000060   Code   RO         1584    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001812   0x00001812   0x00000028   Code   RO         1582    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x0000183a   0x0000183a   0x00000002   PAD
    0x0000183c   0x0000183c   0x0000000c   Code   RO         1526    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x00001848   0x00001848   0x0000002c   Code   RO         1522    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x00001874   0x00001874   0x00000006   Code   RO         1528    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x0000187a   0x0000187a   0x00000002   PAD
    0x0000187c   0x0000187c   0x0000004c   Code   RO         1520    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x000018c8   0x000018c8   0x00000052   Code   RO         1270    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x0000191a   0x0000191a   0x00000002   PAD
    0x0000191c   0x0000191c   0x0000004c   Code   RO         1404    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x00001968   0x00001968   0x00000028   Code   RO         1327    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x00001990   0x00001990   0x00000030   Code   RO         1133    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x000019c0   0x000019c0   0x00000024   Code   RO         1127    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x000019e4   0x000019e4   0x00000024   Code   RO         1137    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00001a08   0x00001a08   0x00000078   Code   RO         1556    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001a80   0x00001a80   0x00000024   Code   RO         1550    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001aa4   0x00001aa4   0x00000080   Code   RO         1554    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001b24   0x00001b24   0x00000028   Code   RO         1352    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00001b4c   0x00001b4c   0x00000028   Code   RO         1358    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00001b74   0x00001b74   0x00000024   Code   RO         1348    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x00001b98   0x00001b98   0x00000028   Code   RO         1354    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00001bc0   0x00001bc0   0x0000007c   Code   RO         1433    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x00001c3c   0x00001c3c   0x0000004e   Code   RO         1435    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x00001c8a   0x00001c8a   0x0000003a   Code   RO         1431    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x00001cc4   0x00001cc4   0x00000038   Code   RO         1450    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x00001cfc   0x00001cfc   0x00000040   Code   RO         1452    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x00001d3c   0x00001d3c   0x00000044   Code   RO         1448    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x00001d80   0x00001d80   0x000000de   Code   RO         1580    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001e5e   0x00001e5e   0x0000003e   Code   RO         1346    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00001e9c   0x00001e9c   0x00000088   Code   RO         1505    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x00001f24   0x00001f24   0x0000006c   Code   RO         1507    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x00001f90   0x00001f90   0x0000003c   Code   RO         1212    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x00001fcc   0x00001fcc   0x0000008c   Code   RO         1220    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x00002058   0x00002058   0x00000060   Code   RO         1216    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x000020b8   0x000020b8   0x0000003c   Code   RO         1202    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x000020f4   0x000020f4   0x00000058   Code   RO         1210    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x0000214c   0x0000214c   0x00000054   Code   RO         1296    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x000021a0   0x000021a0   0x00000018   Code   RO         1194    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x000021b8   0x000021b8   0x0000003a   Code   RO         1192    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x000021f2   0x000021f2   0x00000018   Code   RO         1198    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x0000220a   0x0000220a   0x00000026   Code   RO         1196    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x00002230   0x00002230   0x00000026   Code   RO         1268    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x00002256   0x00002256   0x00000002   PAD
    0x00002258   0x00002258   0x00000018   Code   RO         1200    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x00002270   0x00002270   0x00000006   Code   RO         1204    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x00002276   0x00002276   0x00000002   PAD
    0x00002278   0x00002278   0x0000002c   Code   RO         1208    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x000022a4   0x000022a4   0x0000005c   Code   RO         1222    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x00002300   0x00002300   0x00000014   Code   RO         1206    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00002314   0x00002314   0x00000038   Code   RO         1218    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x0000234c   0x0000234c   0x00000022   Code   RO         1214    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x0000236e   0x0000236e   0x00000002   PAD
    0x00002370   0x00002370   0x00000074   Code   RO         1503    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x000023e4   0x000023e4   0x00000040   Code   RO         1388    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00002424   0x00002424   0x00000060   Code   RO         1390    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x00002484   0x00002484   0x0000000c   Code   RO         1252    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00002490   0x00002490   0x0000005c   Code   RO         1260    .text.osThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x000024ec   0x000024ec   0x00000028   Code   RO         1266    .text.osThreadFlagsWait  RTX_CM0.lib(rtx_thread.o)
    0x00002514   0x00002514   0x00000020   Code   RO         1230    .text.osThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x00002534   0x00002534   0x00000024   Code   RO         1226    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x00002558   0x00002558   0x00000012   Code   RO         1331    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x0000256a   0x0000256a   0x00000002   PAD
    0x0000256c   0x0000256c   0x0000000c   Code   RO         1135    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x00002578   0x00002578   0x0000017c   Code   RO         1165    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x000026f4   0x000026f4   0x00000088   Code   RO         1167    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x0000277c   0x0000277c   0x000000f0   Code   RO         1592    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x0000286c   0x0000286c   0x000001d4   Code   RO         1578    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002a40   0x00002a40   0x000000d0   Code   RO         1588    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002b10   0x00002b10   0x000000a0   Code   RO         1364    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00002bb0   0x00002bb0   0x000000d0   Code   RO         1370    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00002c80   0x00002c80   0x00000078   Code   RO         1360    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x00002cf8   0x00002cf8   0x000000c0   Code   RO         1366    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00002db8   0x00002db8   0x0000006c   Code   RO         1300    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00002e24   0x00002e24   0x00000076   Code   RO         1308    .text.svcRtxThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x00002e9a   0x00002e9a   0x00000002   PAD
    0x00002e9c   0x00002e9c   0x0000004c   Code   RO         1314    .text.svcRtxThreadFlagsWait  RTX_CM0.lib(rtx_thread.o)
    0x00002ee8   0x00002ee8   0x0000000c   Code   RO         1274    .text.svcRtxThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x00002ef4   0x00002ef4   0x00000200   Code   RO         1224    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x000030f4   0x000030f4   0x00000054   Code   RO           54    i.Configure_DMA_For_Playback  dma.o
    0x00003148   0x00003148   0x00000018   Code   RO          499    i.Configure_TPM0_for_DMA  timers.o
    0x00003160   0x00003160   0x00000038   Code   RO          194    i.Control_RGB_LEDs  leds.o
    0x00003198   0x00003198   0x00000070   Code   RO          434    i.Create_OS_Objects  threads.o
    0x00003208   0x00003208   0x0000003c   Code   RO          337    i.DAC_Init          sound.o
    0x00003244   0x00003244   0x0000004c   Code   RO           55    i.DMA0_IRQHandler   dma.o
    0x00003290   0x00003290   0x0000001c   Code   RO           56    i.DMA_Init          dma.o
    0x000032ac   0x000032ac   0x00000018   Code   RO            3    i.Delay             delay.o
    0x000032c4   0x000032c4   0x00000020   Code   RO          752    i.Init_ADC          touchscreen.o
    0x000032e4   0x000032e4   0x00000084   Code   RO          583    i.Init_Debug_Signals  debug.o
    0x00003368   0x00003368   0x00000064   Code   RO          195    i.Init_RGB_LEDs     leds.o
    0x000033cc   0x000033cc   0x00000028   Code   RO          338    i.Init_Voices       sound.o
    0x000033f4   0x000033f4   0x00000028   Code   RO          339    i.Init_Waveform     sound.o
    0x0000341c   0x0000341c   0x00000028   Code   RO          799    i.LCD_24S_Write_Command  st7789.o
    0x00003444   0x00003444   0x00000028   Code   RO          800    i.LCD_24S_Write_Data  st7789.o
    0x0000346c   0x0000346c   0x00000058   Code   RO          801    i.LCD_Controller_Init  st7789.o
    0x000034c4   0x000034c4   0x000001fe   Code   RO          630    i.LCD_Draw_Line     lcd_graphics.o
    0x000036c2   0x000036c2   0x00000002   PAD
    0x000036c4   0x000036c4   0x00000010   Code   RO          666    i.LCD_Erase         lcd_text.o
    0x000036d4   0x000036d4   0x00000082   Code   RO          802    i.LCD_Fill_Buffer   st7789.o
    0x00003756   0x00003756   0x000000ce   Code   RO          803    i.LCD_Fill_Rectangle  st7789.o
    0x00003824   0x00003824   0x000000c0   Code   RO          804    i.LCD_GPIO_Init     st7789.o
    0x000038e4   0x000038e4   0x00000064   Code   RO          805    i.LCD_Init          st7789.o
    0x00003948   0x00003948   0x00000072   Code   RO          806    i.LCD_Plot_Pixel    st7789.o
    0x000039ba   0x000039ba   0x00000096   Code   RO          811    i.LCD_Start_Rectangle  st7789.o
    0x00003a50   0x00003a50   0x00000008   Code   RO          755    i.LCD_TS_Init       touchscreen.o
    0x00003a58   0x00003a58   0x000001a0   Code   RO          756    i.LCD_TS_Read       touchscreen.o
    0x00003bf8   0x00003bf8   0x00000020   Code   RO          667    i.LCD_Text_GetGlyphWidth  lcd_text.o
    0x00003c18   0x00003c18   0x0000005c   Code   RO          668    i.LCD_Text_Init     lcd_text.o
    0x00003c74   0x00003c74   0x00000244   Code   RO          669    i.LCD_Text_PrintChar  lcd_text.o
    0x00003eb8   0x00003eb8   0x00000054   Code   RO          671    i.LCD_Text_PrintStr_RC  lcd_text.o
    0x00003f0c   0x00003f0c   0x00000030   Code   RO          812    i.LCD_Write_Rectangle_Pixel  st7789.o
    0x00003f3c   0x00003f3c   0x000000a8   Code   RO          500    i.PIT_IRQHandler    timers.o
    0x00003fe4   0x00003fe4   0x0000006c   Code   RO          504    i.PWM_Init          timers.o
    0x00004050   0x00004050   0x0000001c   Code   RO          342    i.Play_Waveform_with_DMA  sound.o
    0x0000406c   0x0000406c   0x0000003c   Code   RO          343    i.SineTable_Init    sound.o
    0x000040a8   0x000040a8   0x00000010   Code   RO          344    i.Sound_Disable_Amp  sound.o
    0x000040b8   0x000040b8   0x00000010   Code   RO          345    i.Sound_Enable_Amp  sound.o
    0x000040c8   0x000040c8   0x00000078   Code   RO          346    i.Sound_Generate_Next_Sample  sound.o
    0x00004140   0x00004140   0x00000070   Code   RO          347    i.Sound_Init        sound.o
    0x000041b0   0x000041b0   0x0000004c   Code   RO           57    i.Start_DMA_Playback  dma.o
    0x000041fc   0x000041fc   0x000000e8   Code   RO         1095    i.SystemInit        system_mkl25z4.o
    0x000042e4   0x000042e4   0x00000010   Code   RO          506    i.TPM0_IRQHandler   timers.o
    0x000042f4   0x000042f4   0x00000020   Code   RO          507    i.TPM0_Init         timers.o
    0x00004314   0x00004314   0x00000010   Code   RO          508    i.TPM0_Start        timers.o
    0x00004324   0x00004324   0x000000a4   Code   RO          435    i.Thread_Read_Accelerometer  threads.o
    0x000043c8   0x000043c8   0x000000c8   Code   RO          436    i.Thread_Read_TS    threads.o
    0x00004490   0x00004490   0x000000a0   Code   RO          348    i.Thread_Refill_Sound_Buffer  sound.o
    0x00004530   0x00004530   0x0000008c   Code   RO          349    i.Thread_Sound_Manager  sound.o
    0x000045bc   0x000045bc   0x000000f4   Code   RO          437    i.Thread_Update_Screen  threads.o
    0x000046b0   0x000046b0   0x00000030   Code   RO         1764    i.__ARM_common_ll_muluu  c_p.l(btod.o)
    0x000046e0   0x000046e0   0x0000002c   Code   RO         1775    i.__ARM_fpclassify  m_ps.l(fpclassify.o)
    0x0000470c   0x0000470c   0x00000022   Code   RO         1700    i.__ARM_fpclassifyf  m_ps.l(fpclassifyf.o)
    0x0000472e   0x0000472e   0x0000000a   Code   RO         1703    i.__mathlib_flt_infnan  m_ps.l(funder.o)
    0x00004738   0x00004738   0x0000000c   Code   RO         1705    i.__mathlib_flt_invalid  m_ps.l(funder.o)
    0x00004744   0x00004744   0x0000000e   Code   RO         1708    i.__mathlib_flt_underflow  m_ps.l(funder.o)
    0x00004752   0x00004752   0x00000002   PAD
    0x00004754   0x00004754   0x00000180   Code   RO         1716    i.__mathlib_rredf2  m_ps.l(rredf.o)
    0x000048d4   0x000048d4   0x0000004c   Code   RO         1003    i.__user_perthread_libspace  rtx_lib.o
    0x00004920   0x00004920   0x0000000e   Code   RO         1628    i._is_digit         c_p.l(__printf_wp.o)
    0x0000492e   0x0000492e   0x00000018   Code   RO         1004    i._mutex_acquire    rtx_lib.o
    0x00004946   0x00004946   0x0000000a   Code   RO         1005    i._mutex_free       rtx_lib.o
    0x00004950   0x00004950   0x00000022   Code   RO         1006    i._mutex_initialize  rtx_lib.o
    0x00004972   0x00004972   0x00000014   Code   RO         1007    i._mutex_release    rtx_lib.o
    0x00004986   0x00004986   0x00000008   Code   RO         1008    i._platform_post_stackheap_init  rtx_lib.o
    0x0000498e   0x0000498e   0x00000002   PAD
    0x00004990   0x00004990   0x000000e4   Code   RO          281    i.approx_atan2f     mma8451.o
    0x00004a74   0x00004a74   0x00000014   Code   RO          282    i.approx_sqrtf      mma8451.o
    0x00004a88   0x00004a88   0x00000060   Code   RO          283    i.convert_xyz_to_roll_pitch  mma8451.o
    0x00004ae8   0x00004ae8   0x000000a8   Code   RO          126    i.i2c_busy          i2c.o
    0x00004b90   0x00004b90   0x00000048   Code   RO          127    i.i2c_init          i2c.o
    0x00004bd8   0x00004bd8   0x0000005c   Code   RO          128    i.i2c_read_byte     i2c.o
    0x00004c34   0x00004c34   0x00000034   Code   RO          129    i.i2c_read_setup    i2c.o
    0x00004c68   0x00004c68   0x00000040   Code   RO          130    i.i2c_repeated_read  i2c.o
    0x00004ca8   0x00004ca8   0x00000018   Code   RO          131    i.i2c_start         i2c.o
    0x00004cc0   0x00004cc0   0x00000034   Code   RO          132    i.i2c_wait          i2c.o
    0x00004cf4   0x00004cf4   0x00000038   Code   RO          133    i.i2c_write_byte    i2c.o
    0x00004d2c   0x00004d2c   0x00000036   Code   RO          284    i.init_mma          mma8451.o
    0x00004d62   0x00004d62   0x00000002   PAD
    0x00004d64   0x00004d64   0x000000a0   Code   RO          220    i.main              main.o
    0x00004e04   0x00004e04   0x00000010   Code   RO          972    i.osRtxIdleThread   rtx_config.o
    0x00004e14   0x00004e14   0x00000020   Code   RO         1009    i.os_kernel_is_active  rtx_lib.o
    0x00004e34   0x00004e34   0x00000054   Code   RO          285    i.read_full_xyz     mma8451.o
    0x00004e88   0x00004e88   0x00000184   Code   RO         1676    i.sinf              m_ps.l(sinf.o)
    0x0000500c   0x0000500c   0x0000002c   Code   RO         1767    locale$$code        c_p.l(lc_numeric_c.o)
    0x00005038   0x00005038   0x0000008c   Code   RO         1656    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x000050c4   0x000050c4   0x000000b0   Code   RO         1671    x$fpl$fmul          fz_ps.l(fmul.o)
    0x00005174   0x00005174   0x00000018   Code   RO         1657    x$fpl$frsb          fz_ps.l(faddsub.o)
    0x0000518c   0x0000518c   0x000000d0   Code   RO         1658    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x0000525c   0x0000525c   0x00000010   Code   RO         1673    x$fpl$printf1       fz_ps.l(printf1.o)
    0x0000526c   0x0000526c   0x000000c4   Data   RO          438    .constdata          threads.o
    0x00005330   0x00005330   0x00000ef7   Data   RO          610    .constdata          lucida_12x19.o
    0x00006227   0x00006227   0x0000008e   Data   RO          814    .constdata          st7789.o
    0x000062b5   0x000062b5   0x00000003   PAD
    0x000062b8   0x000062b8   0x00000020   Data   RO          954    .constdata          region.o
    0x000062d8   0x000062d8   0x00000004   Data   RO          955    .constdata          region.o
    0x000062dc   0x000062dc   0x00000024   Data   RO         1019    .constdata          rtx_lib.o
    0x00006300   0x00006300   0x00000024   Data   RO         1020    .constdata          rtx_lib.o
    0x00006324   0x00006324   0x00000018   Data   RO         1021    .constdata          rtx_lib.o
    0x0000633c   0x0000633c   0x00000004   Data   RO         1022    .constdata          rtx_lib.o
    0x00006340   0x00006340   0x00000040   Data   RO         1663    .constdata          fz_ps.l(fdiv.o)
    0x00006380   0x00006380   0x00000020   Data   RO         1717    .constdata          m_ps.l(rredf.o)
    0x000063a0   0x000063a0   0x00000094   Data   RO         1759    .constdata          c_p.l(bigflt0.o)
    0x00006434   0x00006434   0x0000000a   Data   RO          439    .conststring        threads.o
    0x0000643e   0x0000643e   0x00000002   PAD
    0x00006440   0x00006440   0x00000068   Data   RO         1025    .rodata             rtx_lib.o
    0x000064a8   0x000064a8   0x0000000b   Data   RO         1179    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x000064b3   0x000064b3   0x00000001   PAD
    0x000064b4   0x000064b4   0x00000020   Data   RO         1920    Region$$Table       anon$$obj.o
    0x000064d4   0x000064d4   0x0000001c   Data   RO         1766    locale$$data        c_p.l(lc_numeric_c.o)


    Execution Region RW_IRAM1 (Exec base: 0x1ffff000, Load base: 0x000064f0, Size: 0x000023a8, Max: 0x00004000, ABSOLUTE, COMPRESSED[0x00000048])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   COMPRESSED   0x00001000   Data   RW         1010    .bss.os             rtx_lib.o
    0x20000000   COMPRESSED   0x00000040   Data   RW         1011    .bss.os             rtx_lib.o
    0x20000040   COMPRESSED   0x000001f0   Data   RW         1012    .bss.os.libspace    rtx_lib.o
    0x20000230   COMPRESSED   0x00000034   Data   RW         1013    .bss.os.msgqueue.cb  rtx_lib.o
    0x20000264   COMPRESSED   0x00000050   Data   RW         1014    .bss.os.msgqueue.mem  rtx_lib.o
    0x200002b4   COMPRESSED   0x00000044   Data   RW         1015    .bss.os.thread.cb   rtx_lib.o
    0x200002f8   COMPRESSED   0x00000044   Data   RW         1016    .bss.os.thread.cb   rtx_lib.o
    0x2000033c   COMPRESSED   0x00000004   PAD
    0x20000340   COMPRESSED   0x000000c8   Data   RW         1017    .bss.os.thread.stack  rtx_lib.o
    0x20000408   COMPRESSED   0x000000c8   Data   RW         1018    .bss.os.thread.stack  rtx_lib.o
    0x200004d0   COMPRESSED   0x00000014   Data   RW           58    .data               dma.o
    0x200004e4   COMPRESSED   0x00000008   Data   RW          134    .data               i2c.o
    0x200004ec   COMPRESSED   0x00000010   Data   RW          287    .data               mma8451.o
    0x200004fc   COMPRESSED   0x00000001   Data   RW          351    .data               sound.o
    0x200004fd   COMPRESSED   0x00000003   PAD
    0x20000500   COMPRESSED   0x00000018   Data   RW          440    .data               threads.o
    0x20000518   COMPRESSED   0x00000004   Data   RW          511    .data               timers.o
    0x2000051c   COMPRESSED   0x0000001c   Data   RW          675    .data               lcd_text.o
    0x20000538   COMPRESSED   0x00000028   Data   RW          757    .data               touchscreen.o
    0x20000560   COMPRESSED   0x00000004   Data   RW          904    .data               profile.o
    0x20000564   COMPRESSED   0x00000004   Data   RW          905    .data               profile.o
    0x20000568   COMPRESSED   0x00000004   Data   RW          906    .data               profile.o
    0x2000056c   COMPRESSED   0x00000001   Data   RW          907    .data               profile.o
    0x2000056d   COMPRESSED   0x00000003   PAD
    0x20000570   COMPRESSED   0x00000004   Data   RW          956    .data               region.o
    0x20000574   COMPRESSED   0x00000001   Data   RW         1024    .data               rtx_lib.o
    0x20000575   COMPRESSED   0x00000003   PAD
    0x20000578   COMPRESSED   0x00000004   Data   RW         1096    .data               system_mkl25z4.o
    0x2000057c   COMPRESSED   0x000000a4   Data   RW         1180    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x20000620        -       0x00000920   Zero   RW          350    .bss                sound.o
    0x20000f40        -       0x00000060   Zero   RW         1778    .bss                c_p.l(libspace.o)
    0x20000fa0        -       0x00000001   Zero   RW         1538    .bss.PendST         RTX_CM0.lib(os_systick.o)
    0x20000fa1   COMPRESSED   0x00000007   PAD
    0x20000fa8        -       0x00000000   Zero   RW         1083    HEAP                startup_mkl25z4.o
    0x20000fa8        -       0x00000400   Zero   RW         1082    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       132         16          0          0          0        553   debug.o
        24          6          0          0          0       5488   delay.o
       264         64          0         20          0     225924   dma.o
       580         56          0          8          0       5074   i2c.o
       510          0          0          0          0       4421   lcd_graphics.o
       804         88          0         28          0       6477   lcd_text.o
       156         22          0          0          0       1211   leds.o
         0          0       3831          0          0        742   lucida_12x19.o
       160         34          0          0          0       2284   main.o
       482         40          0         16          0       4580   mma8451.o
         0          0          0         13          0        498   profile.o
         0          0         36          4          0       1342   region.o
        18          6          0          0          0       1085   rtx_config.o
       204         16        204       5325          0      12395   rtx_lib.o
       792        134          0          1       2336       7696   sound.o
      1108         56        142          0          0       8226   st7789.o
        80         44        192          0       1024       1068   startup_mkl25z4.o
       232         46          0          4          0       1007   system_mkl25z4.o
       720        120        206         24          0       7941   threads.o
       364         76          0          4          0       4698   timers.o
       456         30          0         40          0       3343   touchscreen.o

    ----------------------------------------------------------------------
      7092        854       4648       5500       3360     306053   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          5         13          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          0          0          0        500   irq_cm0.o
       138         32          0          0          1       3224   os_systick.o
        58          4          0          0          0       2886   rtx_delay.o
       648         48         11        164          0      17544   rtx_kernel.o
       260          0          0          0          0       2922   rtx_memory.o
       188          0          0          0          0      14743   rtx_mempool.o
      1634         44          0          0          0      18033   rtx_msgqueue.o
       898         32          0          0          0       9804   rtx_mutex.o
       360         24          0          0          0       4848   rtx_system.o
      2106        116          0          0          0      32232   rtx_thread.o
       236         20          0          0          0      10604   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
       284          0          0          0          0        136   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        48          6          0          0          0         88   _printf_char_common.o
        10          0          0          0          0          0   _printf_f.o
      1048         14          0          0          0        176   _printf_fp_dec.o
       136         16          0          0          0         76   _printf_fp_infnan.o
        78          0          0          0          0        100   _printf_pad.o
         2          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        22          0          0          0          0         92   _rserrno.o
        10          0          0          0          0         60   _sputc.o
       488          0          0          0          0         92   aeabi_sdivfast.o
       216          6        148          0          0         80   bigflt0.o
      1456         30          0          0          0        336   btod.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        18          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       122          0          0          0          0         72   lludiv10.o
        40          4          0          0          0         84   noretval__2sprintf.o
         8          0          0          0          0         76   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        40          0          0          0          0         60   rtudiv10.o
       160          4          0          0          0         80   strcmpv6m.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        84          4          0          0          0         60   f2d.o
       372          8          0          0          0        240   faddsub.o
       352         10         64          0          0         92   fdiv.o
        76          0          0          0          0         68   ffixi.o
        48          0          0          0          0         60   ffixui.o
        94          0          0          0          0         92   fflti.o
       176          4          0          0          0         80   fmul.o
       128          6          0          0          0         68   frnd.o
        68          4          0          0          0         68   fscalbn.o
        16          4          0          0          0         76   printf1.o
         0          0          0          0          0          0   usenofp.o
        44          4          0          0          0         60   fpclassify.o
        34          0          0          0          0         60   fpclassifyf.o
        36          0          0          0          0        204   funder.o
       384         18         32          0          0         88   rredf.o
       388         58          0          0          0        104   sinf.o

    ----------------------------------------------------------------------
     13816        554        284        164        104     121320   Library Totals
        28          0          1          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6690        328         11        164          1     117340   RTX_CM0.lib
      4798        106        176          0         96       2560   c_p.l
      1414         40         64          0          0        904   fz_ps.l
       886         80         32          0          0        516   m_ps.l

    ----------------------------------------------------------------------
     13816        554        284        164        104     121320   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     20908       1408       4932       5664       3464     422205   Grand Totals
     20908       1408       4932         72       3464     422205   ELF Image Totals (compressed)
     20908       1408       4932         72          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                25840 (  25.23kB)
    Total RW  Size (RW Data + ZI Data)              9128 (   8.91kB)
    Total ROM Size (Code + RO Data + RW Data)      25912 (  25.30kB)

==============================================================================

